{
	"info": {
		"_postman_id": "ac7728a6-1e90-4105-aefb-0465f4d2e418",
		"name": "ContractorComplianceRebuild",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1459eb3-6e63-465d-92e4-047a94488035",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", data.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "slessard@contractorcompliance.ca",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "slessard@contractorcompliance.ca",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Password1234",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/auth/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.6"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 16 Jan 2019 21:11:26 GMT"
								},
								{
									"key": "Authorization",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjQzNGI2MjAxZWM5NmI4Mzc1ZjczMzI3N2Y5OTM2ZGU2NTc1NmE0ZGUwYWRiMTdjOTIxYTFmMzg2OGE1Y2VhOTg1OGNkZjZhYmUxYzgyOTAyIn0.eyJhdWQiOiIxIiwianRpIjoiNDM0YjYyMDFlYzk2YjgzNzVmNzMzMjc3Zjk5MzZkZTY1NzU2YTRkZTBhZGIxN2M5MjFhMWYzODY4YTVjZWE5ODU4Y2RmNmFiZTFjODI5MDIiLCJpYXQiOjE1NDc2NzMwODYsIm5iZiI6MTU0NzY3MzA4NiwiZXhwIjoxNTc5MjA5MDg2LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.GY4JKZDTOHGYSdboqDrrBh51l-ACAOTIiJz9YLUwZ2bRlx5VZKqttxbChFR8pq4s-9BBweZIkJVNw097aiTvfRrqa-GNgM2F9wHjXz3eADyEENtcKJoOskqYDqnmRK14KK-VaNdq1b8gMMtbe7Egr1ZnBHHtZLnuKaJYuIxfdkefQgsuv4x8J80ZTXI06VmIlOTaioyf9ZCAU_opU_LK1uM573S-f5ZijJrAUvLT98cBF5UwCxHPZlOow81I8wI4gpcvQil49CH2GE3Hx3j0LUKwDU6vrWghIJ1RtT59q5wHbuu_sbwKMro4yVsFsfx2_GNNQJO8BX5lu5524iinIVOMjdcTlCDjEciNuUE2TT_nTwWG2R7tnPoTN0SSkCpL92jYwqn95vnI3PHlgUtD_qZMcUY7VnJuz4WXjnGXJCjWP6qg73mKYDsN_9prXsDsfIOnuIPoE1PXb9wu_17Ik2yPWwbsamN8Iw3CKFfB1XlmRiD9jk7rUJDaK-vVs5g58_5KUoKlaPKfUYtGywxAVvKbk_m9vVbJnlCUxWlDHlr0pKq5GowKXB4Qs5JE6v0hHjYTT4uZJx4uuUyLuUPa_mnL9BczGKMOeq0gFl6o8phWVo7U8is5RwZgqLXAvx0O4QP846FbmFwbnmrPT1P3Q3DVx7uJ7ZS9bwfaKDXBrkI"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"role\": {\n        \"id\": 4,\n        \"user_id\": 2,\n        \"role\": \"owner\",\n        \"entity_key\": \"contractor\",\n        \"entity_id\": 2,\n        \"pivot_contractor_id\": null,\n        \"employee_id\": null,\n        \"created_at\": \"2019-01-10 14:14:32\",\n        \"updated_at\": \"2019-01-10 14:14:32\",\n        \"access_level\": null\n    },\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjQzNGI2MjAxZWM5NmI4Mzc1ZjczMzI3N2Y5OTM2ZGU2NTc1NmE0ZGUwYWRiMTdjOTIxYTFmMzg2OGE1Y2VhOTg1OGNkZjZhYmUxYzgyOTAyIn0.eyJhdWQiOiIxIiwianRpIjoiNDM0YjYyMDFlYzk2YjgzNzVmNzMzMjc3Zjk5MzZkZTY1NzU2YTRkZTBhZGIxN2M5MjFhMWYzODY4YTVjZWE5ODU4Y2RmNmFiZTFjODI5MDIiLCJpYXQiOjE1NDc2NzMwODYsIm5iZiI6MTU0NzY3MzA4NiwiZXhwIjoxNTc5MjA5MDg2LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.GY4JKZDTOHGYSdboqDrrBh51l-ACAOTIiJz9YLUwZ2bRlx5VZKqttxbChFR8pq4s-9BBweZIkJVNw097aiTvfRrqa-GNgM2F9wHjXz3eADyEENtcKJoOskqYDqnmRK14KK-VaNdq1b8gMMtbe7Egr1ZnBHHtZLnuKaJYuIxfdkefQgsuv4x8J80ZTXI06VmIlOTaioyf9ZCAU_opU_LK1uM573S-f5ZijJrAUvLT98cBF5UwCxHPZlOow81I8wI4gpcvQil49CH2GE3Hx3j0LUKwDU6vrWghIJ1RtT59q5wHbuu_sbwKMro4yVsFsfx2_GNNQJO8BX5lu5524iinIVOMjdcTlCDjEciNuUE2TT_nTwWG2R7tnPoTN0SSkCpL92jYwqn95vnI3PHlgUtD_qZMcUY7VnJuz4WXjnGXJCjWP6qg73mKYDsN_9prXsDsfIOnuIPoE1PXb9wu_17Ik2yPWwbsamN8Iw3CKFfB1XlmRiD9jk7rUJDaK-vVs5g58_5KUoKlaPKfUYtGywxAVvKbk_m9vVbJnlCUxWlDHlr0pKq5GowKXB4Qs5JE6v0hHjYTT4uZJx4uuUyLuUPa_mnL9BczGKMOeq0gFl6o8phWVo7U8is5RwZgqLXAvx0O4QP846FbmFwbnmrPT1P3Q3DVx7uJ7ZS9bwfaKDXBrkI\"\n}"
						}
					]
				},
				{
					"name": "Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b3ec3a1-21f2-4d64-ae23-9cd2c56ae647",
								"exec": [
									"pm.test('Request succeeds', function(){",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"User is authenticated\", function(){",
									"    pm.expect(pm.response.json().status).to.equal(true)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/auth/check?=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"check"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Check",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/auth/check",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"check"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.6"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 16 Jan 2019 19:57:17 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true\n}"
						}
					]
				},
				{
					"name": "User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5873964f-d489-4cf6-bda5-b2207d153e26",
								"exec": [
									"pm.test('Request succeeds', function(){",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Results have user id\", function(){",
									"    pm.expect(pm.response.json().data.id).to.be.a('number')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/auth/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"user"
							]
						},
						"description": "Describe the authenticated user"
					},
					"response": [
						{
							"name": "User",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/auth/user",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.6"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 16 Jan 2019 19:58:03 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"username\": \"Slessard\",\n        \"first_name\": \"ShaneL\",\n        \"last_name\": \"lessard\",\n        \"email\": \"slessard@contractorcompliance.ca\",\n        \"avatar\": \"https://develop.contractorcompliance.ca//storage//storage//storage/user_avatars/slessard@contractorcompliance.ca.png\",\n        \"current_role_id\": 4,\n        \"phone_number\": null,\n        \"last_login\": \"2019-01-16 19:55:57\",\n        \"created_at\": \"2019-01-09 20:03:23\",\n        \"updated_at\": \"2019-01-16 19:55:57\",\n        \"role\": {\n            \"id\": 4,\n            \"user_id\": 2,\n            \"role\": \"owner\",\n            \"entity_key\": \"contractor\",\n            \"entity_id\": 2,\n            \"pivot_contractor_id\": null,\n            \"employee_id\": null,\n            \"created_at\": \"2019-01-10 14:14:32\",\n            \"updated_at\": \"2019-01-10 14:14:32\",\n            \"access_level\": null\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82df5d6b-0754-418d-91c5-25a4054494df",
								"exec": [
									"pm.test('Request succeeds', function(){",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"User has roles and current role\", function(){",
									"    pm.expect(pm.response.json().roles).to.be.a('array')",
									"    pm.expect(pm.response.json().roles[0]).to.be.a('object')",
									"})",
									"",
									"pm.test(\"User has a current role\", function(){",
									"    pm.expect(pm.response.json().current_role).to.be.a('object')",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/auth/roles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"roles"
							]
						},
						"description": "get user roles"
					},
					"response": [
						{
							"name": "Roles",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/auth/roles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.6"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 16 Jan 2019 20:21:02 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"roles\": [\n        {\n            \"id\": 3,\n            \"user_id\": 1,\n            \"role\": \"employee\",\n            \"entity_key\": \"contractor\",\n            \"entity_id\": 1,\n            \"pivot_contractor_id\": null,\n            \"employee_id\": null,\n            \"created_at\": \"2019-01-10 14:14:32\",\n            \"updated_at\": \"2019-01-10 14:14:32\",\n            \"access_level\": null\n        }\n    ],\n    \"current_role\": {\n        \"id\": 4,\n        \"user_id\": 2,\n        \"role\": \"owner\",\n        \"entity_key\": \"contractor\",\n        \"entity_id\": 2,\n        \"pivot_contractor_id\": null,\n        \"employee_id\": null,\n        \"created_at\": \"2019-01-10 14:14:32\",\n        \"updated_at\": \"2019-01-10 14:14:32\",\n        \"access_level\": null\n    }\n}"
						}
					]
				},
				{
					"name": "Change Role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_method",
									"value": "PATCH",
									"description": "IGNORE, THIS IS TO FAKE PATCH",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/auth/role/9111",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"role",
								"9111"
							]
						},
						"description": "Route params:\nRole Id"
					},
					"response": [
						{
							"name": "Change Role (PATCH)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "PATCH",
											"description": "IGNORE, THIS IS TO FAKE PATCH",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/auth/role/2",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"role",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Fri, 18 Jan 2019 19:47:08 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"username\": \"Slessard\",\n    \"first_name\": \"Shane\",\n    \"last_name\": \"Lessard\",\n    \"email\": \"slessard@contractorcompliance.ca\",\n    \"avatar\": \"http://app.homestead.test/storage/user-avatars/d6ltAT2tJfFZ2nmxNP8eMBEQLdTq7gKMgP08dIIl.png\",\n    \"current_role_id\": 2,\n    \"phone_number\": \"555-555-5555\",\n    \"last_login\": \"2019-01-18 18:56:52\",\n    \"created_at\": null,\n    \"updated_at\": \"2019-01-18 19:47:08\"\n}"
						}
					]
				},
				{
					"name": "Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "first_name",
									"value": "Shane",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "Lessard",
									"type": "text"
								},
								{
									"key": "email",
									"value": "slessard@contractorcompliance.ca",
									"type": "text"
								},
								{
									"key": "phone_number",
									"value": "555-555-5555",
									"type": "text"
								},
								{
									"key": "avatar",
									"value": "",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"profile"
							]
						}
					},
					"response": [
						{
							"name": "Profile",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "Shane",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Lessard",
											"type": "text"
										},
										{
											"key": "email",
											"value": "slessard@contractorcompliance.ca",
											"type": "text"
										},
										{
											"key": "phone_number",
											"value": "555-555-5555",
											"type": "text"
										},
										{
											"key": "avatar",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/auth/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.6"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 16 Jan 2019 20:00:36 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "\"User has been updated\""
						}
					]
				},
				{
					"name": "Set Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7aa9fb83-1a94-4b9b-a928-28ad9e93e3f5",
								"exec": [
									"pm.test('Request succeeds', function(){",
									"    pm.response.to.have.status(200);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "Password1234",
									"type": "text"
								},
								{
									"key": "new_password",
									"value": "Password1234",
									"type": "text"
								},
								{
									"key": "new_password_confirmation",
									"value": "Password1234",
									"type": "text"
								},
								{
									"key": "_method",
									"value": "PATCH",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/auth/password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"password"
							]
						},
						"description": "Authenticated user can set a new password"
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "slessard@contractorcompliance.ca",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/auth/forgot-password?",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"forgot-password"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Forgot Password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "slessard@contractorcompliance.ca",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/auth/forgot-password?",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"forgot-password"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.6"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 16 Jan 2019 21:18:31 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "\"Password reset email sent\""
						}
					]
				},
				{
					"name": "Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "244e099f-be43-4802-9fdd-3261d0fe9e20",
								"exec": [
									"pm.test('Request succeeds', function(){",
									"    pm.response.to.have.status(400);",
									"})",
									"",
									"pm.test(\"User is authenticated\", function(){",
									"    pm.expect(pm.response.json().message).to.equal(\"Token Invalid\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "slessard@contractorcompliance.ca",
									"type": "text"
								},
								{
									"key": "token",
									"value": "Fake Token",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password1234",
									"type": "text"
								},
								{
									"key": "password_confirmation",
									"value": "Password1234",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/auth/do-reset",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"do-reset"
							]
						}
					},
					"response": [
						{
							"name": "Reset Password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "slessard@contractorcompliance.ca",
											"type": "text"
										},
										{
											"key": "token",
											"value": "2d917e25884a5114ad2b2171f0290964971d6bb4ea87c38689a5dfa9d3394832",
											"type": "text"
										},
										{
											"key": "password",
											"value": "Password1234",
											"type": "text"
										},
										{
											"key": "password_confirmation",
											"value": "Password1234",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/auth/do-reset",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"do-reset"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.6"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Wed, 16 Jan 2019 21:21:44 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully changed password\"\n}"
						}
					]
				},
				{
					"name": "contactable",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d623739-9b42-4b57-8f10-3e1e5f5a3ac0",
								"exec": [
									"pm.test('Request succeeds', function(){",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"User gets an object of user types\", function(){",
									"    pm.expect(pm.response.json().contactable).to.be.a('object')",
									"    pm.expect(pm.response.json().contactable.employees).to.be.a('array')",
									"    pm.expect(pm.response.json().contactable.contractors).to.be.a('array')",
									"    pm.expect(pm.response.json().contactable.hiring_organizations).to.be.a('array')",
									"",
									"",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/contactable",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"contactable"
							]
						},
						"description": "Users that this user can contract"
					},
					"response": [
						{
							"name": "contactable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/auth/contactable",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"contactable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Mon, 21 Jan 2019 18:16:27 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "56"
								}
							],
							"cookie": [],
							"body": "{\n    \"contactable\": {\n        \"employees\": [\n            {\n                \"id\": 2,\n                \"username\": \"Ehab\",\n                \"first_name\": \"Ehab\",\n                \"last_name\": null,\n                \"email\": \"eng.ehabahmed@hotmail.com\",\n                \"avatar\": null,\n                \"current_role_id\": 1,\n                \"phone_number\": null,\n                \"last_login\": \"2019-01-16 14:48:12\",\n                \"created_at\": \"2019-01-10 14:12:38\",\n                \"updated_at\": \"2019-01-16 14:48:12\",\n                \"role\": {\n                    \"id\": 1,\n                    \"user_id\": 1,\n                    \"role\": \"employee\",\n                    \"entity_key\": \"contractor\",\n                    \"entity_id\": 1,\n                    \"pivot_contractor_id\": null,\n                    \"employee_id\": \"1234\",\n                    \"created_at\": \"2019-01-16 16:46:13\",\n                    \"updated_at\": null,\n                    \"access_level\": null,\n                    \"company\": {\n                        \"id\": 1,\n                        \"name\": \"First Contractor\",\n                        \"owner_id\": 1,\n                        \"phone\": null,\n                        \"address\": null,\n                        \"city\": null,\n                        \"country\": null,\n                        \"state\": null,\n                        \"post_code\": null,\n                        \"website\": null,\n                        \"wsib_number\": null,\n                        \"avatar\": null,\n                        \"stripe_id\": null,\n                        \"card_brand\": null,\n                        \"card_last_four\": null,\n                        \"trial_ends_at\": null,\n                        \"registration_deadline\": null,\n                        \"created_at\": null,\n                        \"updated_at\": null\n                    }\n                }\n            }\n        ],\n        \"hiring_organizations\": [],\n        \"contractors\": []\n    }\n}"
						},
						{
							"name": "contactable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/auth/contactable",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"auth",
										"contactable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 17 Jan 2019 20:07:00 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "57"
								}
							],
							"cookie": [],
							"body": "{\n    \"contactable\": {\n        \"employees\": [\n            {\n                \"id\": 2,\n                \"username\": \"Ehab\",\n                \"first_name\": \"Ehab\",\n                \"last_name\": null,\n                \"email\": \"eng.ehabahmed@hotmail.com\",\n                \"avatar\": \"http://app.homestead.test/storage/\",\n                \"current_role_id\": 1,\n                \"phone_number\": null,\n                \"last_login\": \"2019-01-16 14:48:12\",\n                \"created_at\": \"2019-01-10 14:12:38\",\n                \"updated_at\": \"2019-01-16 14:48:12\"\n            }\n        ],\n        \"hiring_organizations\": [],\n        \"contractors\": []\n    }\n}"
						}
					]
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/auth/logout?Accept=application/json",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							],
							"query": [
								{
									"key": "Accept",
									"value": "application/json"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign Up (Contractor)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "shanelessard@example.net",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								},
								{
									"key": "password_confirmation",
									"value": "password",
									"type": "text"
								},
								{
									"key": "name",
									"value": "ShaneCompanies",
									"type": "text"
								},
								{
									"key": "address",
									"value": "123 Fake Street",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Windsor",
									"type": "text"
								},
								{
									"key": "country",
									"value": "Canada",
									"type": "text"
								},
								{
									"key": "state",
									"value": "Ontario",
									"type": "text"
								},
								{
									"key": "post_code",
									"value": "a1a 2b2",
									"type": "text"
								},
								{
									"key": "work_type_id",
									"value": "4",
									"type": "text"
								},
								{
									"key": "hiring_organization_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "coupon",
									"value": "test-coupon",
									"type": "text"
								},
								{
									"key": "stripe_token",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				}
			],
			"description": "These actions are for authentication sessions as well as self-performed user account actions. \n\nUser routes will be created for any action that isn't designed to only mutate \"self\"",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "78138881-d6a5-4fb5-860a-28fe1960abc3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "71523e2d-5a1e-449a-b632-c9c7e9f9eeca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Create",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "short_description",
									"value": "Task 1",
									"type": "text"
								},
								{
									"key": "long_description",
									"value": "Please complete this task to the best of your abilities. This is a description of the task you need to complete.",
									"type": "text"
								},
								{
									"key": "attachments[]",
									"value": "",
									"type": "file"
								},
								{
									"key": "attachments[]",
									"value": "",
									"type": "file"
								},
								{
									"key": "assigned_to",
									"value": "2",
									"type": "text"
								},
								{
									"key": "task_type_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "target_date",
									"value": "2019-01-19 17:56:27",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/task",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task"
							]
						}
					},
					"response": [
						{
							"name": "Create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "short_description",
											"value": "Task 1",
											"type": "text"
										},
										{
											"key": "long_description",
											"value": "Please complete this task to the best of your abilities. This is a description of the task you need to complete.",
											"type": "text"
										},
										{
											"key": "attachments[]",
											"type": "file",
											"src": []
										},
										{
											"key": "attachments[]",
											"type": "file",
											"src": []
										},
										{
											"key": "assigned_to",
											"value": "2",
											"type": "text"
										},
										{
											"key": "task_type_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "target_date",
											"value": "2019-01-19 17:56:27",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/task",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"task"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 17 Jan 2019 18:10:31 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"assigned_by\": 1,\n        \"assigned_to\": \"2\",\n        \"short_description\": \"Task 1\",\n        \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n        \"task_type_id\": \"1\",\n        \"target_date\": \"2019-01-19 17:56:27\",\n        \"updated_at\": \"2019-01-17 18:10:31\",\n        \"created_at\": \"2019-01-17 18:10:31\",\n        \"id\": 7\n    }\n]"
						}
					]
				},
				{
					"name": "Get Tasks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/task",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task"
							]
						}
					},
					"response": [
						{
							"name": "Get Tasks",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/task",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"task"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 17 Jan 2019 18:14:43 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								}
							],
							"cookie": [],
							"body": "{\n    \"assigned_tasks\": [\n        {\n            \"id\": 2,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 2,\n            \"assigned_to\": 1,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:00:10\",\n            \"updated_at\": \"2019-01-17 18:00:10\",\n            \"is_approved\": 0\n        },\n        {\n            \"id\": 5,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 2,\n            \"assigned_to\": 1,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:08:21\",\n            \"updated_at\": \"2019-01-17 18:08:21\",\n            \"is_approved\": 0\n        }\n    ],\n    \"created_tasks\": [\n        {\n            \"id\": 1,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 17:59:39\",\n            \"updated_at\": \"2019-01-17 17:59:39\",\n            \"is_approved\": 0\n        },\n        {\n            \"id\": 3,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:00:22\",\n            \"updated_at\": \"2019-01-17 18:00:22\",\n            \"is_approved\": 0\n        },\n        {\n            \"id\": 4,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:00:59\",\n            \"updated_at\": \"2019-01-17 18:00:59\",\n            \"is_approved\": 0\n        },\n        {\n            \"id\": 6,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:08:46\",\n            \"updated_at\": \"2019-01-17 18:08:46\",\n            \"is_approved\": 0\n        },\n        {\n            \"id\": 7,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:10:31\",\n            \"updated_at\": \"2019-01-17 18:10:31\",\n            \"is_approved\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/task/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"2"
							]
						}
					},
					"response": [
						{
							"name": "Get Tasks",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/task",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"task"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 17 Jan 2019 18:14:43 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								}
							],
							"cookie": [],
							"body": "{\n    \"assigned_tasks\": [\n        {\n            \"id\": 2,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 2,\n            \"assigned_to\": 1,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:00:10\",\n            \"updated_at\": \"2019-01-17 18:00:10\",\n            \"is_approved\": 0\n        },\n        {\n            \"id\": 5,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 2,\n            \"assigned_to\": 1,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:08:21\",\n            \"updated_at\": \"2019-01-17 18:08:21\",\n            \"is_approved\": 0\n        }\n    ],\n    \"created_tasks\": [\n        {\n            \"id\": 1,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 17:59:39\",\n            \"updated_at\": \"2019-01-17 17:59:39\",\n            \"is_approved\": 0\n        },\n        {\n            \"id\": 3,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:00:22\",\n            \"updated_at\": \"2019-01-17 18:00:22\",\n            \"is_approved\": 0\n        },\n        {\n            \"id\": 4,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:00:59\",\n            \"updated_at\": \"2019-01-17 18:00:59\",\n            \"is_approved\": 0\n        },\n        {\n            \"id\": 6,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:08:46\",\n            \"updated_at\": \"2019-01-17 18:08:46\",\n            \"is_approved\": 0\n        },\n        {\n            \"id\": 7,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:10:31\",\n            \"updated_at\": \"2019-01-17 18:10:31\",\n            \"is_approved\": 0\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get My Assigned Tasks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/task/assigned-tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"assigned-tasks"
							]
						}
					},
					"response": [
						{
							"name": "Get My Assigned Tasks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/task/assigned-tasks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"task",
										"assigned-tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 17 Jan 2019 18:19:47 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								}
							],
							"cookie": [],
							"body": "{\n    \"assigned_tasks\": [\n        {\n            \"id\": 2,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 2,\n            \"assigned_to\": 1,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:00:10\",\n            \"updated_at\": \"2019-01-17 18:00:10\",\n            \"is_approved\": 0,\n            \"assigner\": {\n                \"id\": 2,\n                \"username\": \"Ehab\",\n                \"first_name\": \"Ehab\",\n                \"last_name\": null,\n                \"email\": \"eng.ehabahmed@hotmail.com\",\n                \"avatar\": \"http://app.homestead.test/storage/\",\n                \"current_role_id\": null,\n                \"phone_number\": null,\n                \"last_login\": \"2019-01-16 14:48:12\",\n                \"created_at\": \"2019-01-10 14:12:38\",\n                \"updated_at\": \"2019-01-16 14:48:12\"\n            },\n            \"attachments\": []\n        },\n        {\n            \"id\": 5,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 2,\n            \"assigned_to\": 1,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:08:21\",\n            \"updated_at\": \"2019-01-17 18:08:21\",\n            \"is_approved\": 0,\n            \"assigner\": {\n                \"id\": 2,\n                \"username\": \"Ehab\",\n                \"first_name\": \"Ehab\",\n                \"last_name\": null,\n                \"email\": \"eng.ehabahmed@hotmail.com\",\n                \"avatar\": \"http://app.homestead.test/storage/http://app.homestead.test/storage/\",\n                \"current_role_id\": null,\n                \"phone_number\": null,\n                \"last_login\": \"2019-01-16 14:48:12\",\n                \"created_at\": \"2019-01-10 14:12:38\",\n                \"updated_at\": \"2019-01-16 14:48:12\"\n            },\n            \"attachments\": [\n                {\n                    \"id\": 3,\n                    \"file_name\": \"attachment-0.png\",\n                    \"task_id\": 5,\n                    \"uploaded_by\": 1,\n                    \"created_at\": \"2019-01-17 18:08:21\",\n                    \"updated_at\": \"2019-01-17 18:08:21\"\n                },\n                {\n                    \"id\": 4,\n                    \"file_name\": \"attachment-1.png\",\n                    \"task_id\": 5,\n                    \"uploaded_by\": 1,\n                    \"created_at\": \"2019-01-17 18:08:21\",\n                    \"updated_at\": \"2019-01-17 18:08:21\"\n                }\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get My Created Tasks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/task/created-tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"created-tasks"
							]
						}
					},
					"response": [
						{
							"name": "Get My Created Tasks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/task/created-tasks",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"task",
										"created-tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 17 Jan 2019 18:21:58 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								}
							],
							"cookie": [],
							"body": "{\n    \"created_tasks\": [\n        {\n            \"id\": 1,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 17:59:39\",\n            \"updated_at\": \"2019-01-17 17:59:39\",\n            \"is_approved\": 0,\n            \"assignee\": {\n                \"id\": 2,\n                \"username\": \"Ehab\",\n                \"first_name\": \"Ehab\",\n                \"last_name\": null,\n                \"email\": \"eng.ehabahmed@hotmail.com\",\n                \"avatar\": \"http://app.homestead.test/storage/\",\n                \"current_role_id\": null,\n                \"phone_number\": null,\n                \"last_login\": \"2019-01-16 14:48:12\",\n                \"created_at\": \"2019-01-10 14:12:38\",\n                \"updated_at\": \"2019-01-16 14:48:12\"\n            },\n            \"attachments\": []\n        },\n        {\n            \"id\": 3,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:00:22\",\n            \"updated_at\": \"2019-01-17 18:00:22\",\n            \"is_approved\": 0,\n            \"assignee\": {\n                \"id\": 2,\n                \"username\": \"Ehab\",\n                \"first_name\": \"Ehab\",\n                \"last_name\": null,\n                \"email\": \"eng.ehabahmed@hotmail.com\",\n                \"avatar\": \"http://app.homestead.test/storage/http://app.homestead.test/storage/\",\n                \"current_role_id\": null,\n                \"phone_number\": null,\n                \"last_login\": \"2019-01-16 14:48:12\",\n                \"created_at\": \"2019-01-10 14:12:38\",\n                \"updated_at\": \"2019-01-16 14:48:12\"\n            },\n            \"attachments\": []\n        },\n        {\n            \"id\": 4,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:00:59\",\n            \"updated_at\": \"2019-01-17 18:00:59\",\n            \"is_approved\": 0,\n            \"assignee\": {\n                \"id\": 2,\n                \"username\": \"Ehab\",\n                \"first_name\": \"Ehab\",\n                \"last_name\": null,\n                \"email\": \"eng.ehabahmed@hotmail.com\",\n                \"avatar\": \"http://app.homestead.test/storage/http://app.homestead.test/storage/http://app.homestead.test/storage/\",\n                \"current_role_id\": null,\n                \"phone_number\": null,\n                \"last_login\": \"2019-01-16 14:48:12\",\n                \"created_at\": \"2019-01-10 14:12:38\",\n                \"updated_at\": \"2019-01-16 14:48:12\"\n            },\n            \"attachments\": [\n                {\n                    \"id\": 1,\n                    \"file_name\": \"attachment-0.png\",\n                    \"task_id\": 4,\n                    \"uploaded_by\": 1,\n                    \"created_at\": \"2019-01-17 18:00:59\",\n                    \"updated_at\": \"2019-01-17 18:00:59\"\n                },\n                {\n                    \"id\": 2,\n                    \"file_name\": \"attachment-1.png\",\n                    \"task_id\": 4,\n                    \"uploaded_by\": 1,\n                    \"created_at\": \"2019-01-17 18:00:59\",\n                    \"updated_at\": \"2019-01-17 18:00:59\"\n                }\n            ]\n        },\n        {\n            \"id\": 6,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:08:46\",\n            \"updated_at\": \"2019-01-17 18:08:46\",\n            \"is_approved\": 0,\n            \"assignee\": {\n                \"id\": 2,\n                \"username\": \"Ehab\",\n                \"first_name\": \"Ehab\",\n                \"last_name\": null,\n                \"email\": \"eng.ehabahmed@hotmail.com\",\n                \"avatar\": \"http://app.homestead.test/storage/http://app.homestead.test/storage/http://app.homestead.test/storage/http://app.homestead.test/storage/\",\n                \"current_role_id\": null,\n                \"phone_number\": null,\n                \"last_login\": \"2019-01-16 14:48:12\",\n                \"created_at\": \"2019-01-10 14:12:38\",\n                \"updated_at\": \"2019-01-16 14:48:12\"\n            },\n            \"attachments\": [\n                {\n                    \"id\": 5,\n                    \"file_name\": \"attachment-0.png\",\n                    \"task_id\": 6,\n                    \"uploaded_by\": 1,\n                    \"created_at\": \"2019-01-17 18:08:46\",\n                    \"updated_at\": \"2019-01-17 18:08:46\"\n                },\n                {\n                    \"id\": 6,\n                    \"file_name\": \"attachment-1.png\",\n                    \"task_id\": 6,\n                    \"uploaded_by\": 1,\n                    \"created_at\": \"2019-01-17 18:08:46\",\n                    \"updated_at\": \"2019-01-17 18:08:46\"\n                }\n            ]\n        },\n        {\n            \"id\": 7,\n            \"short_description\": \"Task 1\",\n            \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n            \"completion_description\": null,\n            \"status\": \"open\",\n            \"assigned_by\": 1,\n            \"assigned_to\": 2,\n            \"approved_by\": null,\n            \"task_type_id\": 1,\n            \"target_date\": \"2019-01-19 17:56:27\",\n            \"completion_date\": null,\n            \"approved_at\": null,\n            \"created_at\": \"2019-01-17 18:10:31\",\n            \"updated_at\": \"2019-01-17 18:10:31\",\n            \"is_approved\": 0,\n            \"assignee\": {\n                \"id\": 2,\n                \"username\": \"Ehab\",\n                \"first_name\": \"Ehab\",\n                \"last_name\": null,\n                \"email\": \"eng.ehabahmed@hotmail.com\",\n                \"avatar\": \"http://app.homestead.test/storage/http://app.homestead.test/storage/http://app.homestead.test/storage/http://app.homestead.test/storage/http://app.homestead.test/storage/\",\n                \"current_role_id\": null,\n                \"phone_number\": null,\n                \"last_login\": \"2019-01-16 14:48:12\",\n                \"created_at\": \"2019-01-10 14:12:38\",\n                \"updated_at\": \"2019-01-16 14:48:12\"\n            },\n            \"attachments\": [\n                {\n                    \"id\": 7,\n                    \"file_name\": \"attachment-0.png\",\n                    \"task_id\": 7,\n                    \"uploaded_by\": 1,\n                    \"created_at\": \"2019-01-17 18:10:31\",\n                    \"updated_at\": \"2019-01-17 18:10:31\"\n                },\n                {\n                    \"id\": 8,\n                    \"file_name\": \"attachment-1.png\",\n                    \"task_id\": 7,\n                    \"uploaded_by\": 1,\n                    \"created_at\": \"2019-01-17 18:10:31\",\n                    \"updated_at\": \"2019-01-17 18:10:31\"\n                }\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Complete Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjQzZTFjN2ExYjI0ZWQ2ZmQ0ZGMzZjEwYzEwYmRlOThlMzA0ZmIzMTUyNmI4OGE5ZDA2OWRjM2JlYTI2ZDUzN2YyNDE2MThhYzc2NWYxODNlIn0.eyJhdWQiOiIxIiwianRpIjoiNDNlMWM3YTFiMjRlZDZmZDRkYzNmMTBjMTBiZGU5OGUzMDRmYjMxNTI2Yjg4YTlkMDY5ZGMzYmVhMjZkNTM3ZjI0MTYxOGFjNzY1ZjE4M2UiLCJpYXQiOjE1NDgxODQ1MjksIm5iZiI6MTU0ODE4NDUyOSwiZXhwIjoxNTc5NzIwNTI5LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.pd05ChW9La9ngw_fwu4I6MLjDMYzdwHwMp3fkT5qckdRKs57sRlEFR_ed4BEWfp-KgPS9KQECA30UGTjGr5YE1s-nNCHOtDg4MKnPLh63WUKc3LqdTnV3pCPVYSnxPStJ7V7T0O4RNpL-wUi-VeLhaAjoPJLQ1JEBjTLmRYsz0bzMIpwOJAiYjTiUeZjkVCzxM8c6yu4QibjyWH0K5fgC9km8Ay4S094pU-hTpi5sDTe5gS1Gg6MeAytnUlheQZT2rMEvj32oWrbaBTbci3J-fQlxH3YiWZ7geHlSRCwqkEo0eOPD7TebV1ey6JxMh9fFoDyR68eFzbCfj4PG1luJwlToGMBDOLab67dBMcH8jdJiKPQU_bfjzS3pRZwA2wVLhqz7yyC_LtqTG_fTtnlgNq3i1Y-aE1adfxHKkmVisqEIMTjIuf_E_XdrKKyjWaS42Iwhav2OENl-g9HPPrNF31NSWx4r-Pcec9z69nPVw6TXb1hfc-8JgNaInoJCbOpfgF4I8JpYRmUsd2JFzipRR7RJ4GnfJ_erzoLn6ND9RG3WnfLTw7XT7OkMW8YHAecEMgxf5X9FXbVB0hbckYNppGIIuVAf_kDGU0fuBaUafMydrGRWGYVZ9BgPiXCt39VTPHhiywZRcQb4YhV2aGxW0MyrIJzZHGqbh82jPQwnuQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "completion_date",
									"value": "2019-01-23",
									"type": "text"
								},
								{
									"key": "completion_description",
									"value": "Test",
									"type": "text"
								},
								{
									"key": "attachments[]",
									"value": "",
									"type": "file"
								},
								{
									"key": "_method",
									"value": "PATCH",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/task/31/complete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"31",
								"complete"
							]
						},
						"description": "Route params:\ntask id"
					},
					"response": [
						{
							"name": "Complete Task",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "completion_date",
											"value": "2019-01-17 17:59:39",
											"type": "text"
										},
										{
											"key": "completion_description",
											"value": "This has been completed.",
											"type": "text"
										},
										{
											"key": "attachments[]",
											"type": "file",
											"src": []
										},
										{
											"key": "_method",
											"value": "PATCH",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/task/2/complete",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"task",
										"2",
										"complete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 17 Jan 2019 18:50:17 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "56"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 2,\n        \"short_description\": \"Task 1\",\n        \"long_description\": \"Please complete this task to the best of your abilities. This is a description of the task you need to complete.\",\n        \"completion_description\": \"This has been completed.\",\n        \"status\": \"completed\",\n        \"assigned_by\": 2,\n        \"assigned_to\": 1,\n        \"approved_by\": null,\n        \"task_type_id\": 1,\n        \"target_date\": \"2019-01-19 17:56:27\",\n        \"completion_date\": \"2019-01-17 17:59:39\",\n        \"approved_at\": null,\n        \"created_at\": \"2019-01-17 18:00:10\",\n        \"updated_at\": \"2019-01-17 18:37:48\",\n        \"is_approved\": 0\n    }\n]"
						}
					]
				},
				{
					"name": "Approve Task (PATCH}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2da860d-6b4b-49fa-8b13-5ae42901f934",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_method",
									"value": "PATCH",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/task/{{task_id}}/approve",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"{{task_id}}",
								"approve"
							]
						},
						"description": "Route params\ntask id"
					},
					"response": [
						{
							"name": "Approve Task (PATCH}",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_method",
											"value": "PATCH",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/task/2/approve",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"task",
										"2",
										"approve"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 17 Jan 2019 19:11:22 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								}
							],
							"cookie": [],
							"body": "\"Approved\""
						}
					]
				},
				{
					"name": "Get Types",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/task/types",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"types"
							]
						}
					},
					"response": [
						{
							"name": "Get Types",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/task/types",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"task",
										"types"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Thu, 17 Jan 2019 19:17:34 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "58"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Food\",\n        \"description\": \"I'm Hungry\",\n        \"hiring_organization_id\": null,\n        \"is_active\": 1,\n        \"created_at\": \"2019-01-15 17:18:39\",\n        \"updated_at\": \"2019-01-15 17:18:40\"\n    }\n]"
						}
					]
				},
				{
					"name": "Reassign (PATCH)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "aedec585-856a-4338-8369-dd881cf6cf21",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_method",
									"value": "PATCH",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/task/13/reassign/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"13",
								"reassign",
								"2"
							]
						},
						"description": "Route params:\ntask id\nuser id"
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/task/13",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"13"
							]
						},
						"description": "Route params:\ntask id"
					},
					"response": []
				}
			],
			"description": "Routes the user can take to get, create, assign, complete and approve tasks.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "daa00412-5b6d-4d1b-81a6-9bb4b96f6ca7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f292b9c3-e346-4b6c-b913-22c322673086",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Employee Dashboard",
			"item": [
				{
					"name": "Overall Compliance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/employee/overall-compliance",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"employee",
								"overall-compliance"
							]
						},
						"description": "This route as  well as:\nCompany Compliance, Company Positions  Compliance, Past  Due, Requirement History, Upload (in this directory)\nCan take an employee_id as a query parameter to act as an employee, if the curret user is an  admin/owner for the same contracting organization."
					},
					"response": [
						{
							"name": "{{base_url}}/api/employee/overall-compliance",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/employee/overall-compliance",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"employee",
										"overall-compliance"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.15.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Date",
									"value": "Mon, 21 Jan 2019 21:33:39 GMT"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "60"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "59"
								}
							],
							"cookie": [],
							"body": "{\n    \"requirement_count\": 10,\n    \"requirement_completed_count\": 4,\n    \"requirement_past_due_count\": 6,\n    \"compliance\": 0\n}"
						}
					]
				},
				{
					"name": "Company Compliance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/employee/company-compliance",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"employee",
								"company-compliance"
							]
						}
					},
					"response": []
				},
				{
					"name": "Company Positions Requirements",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/employee/company-compliance/44/requirements",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"employee",
								"company-compliance",
								"44",
								"requirements"
							]
						},
						"description": "Route params:\nhiring_organization id"
					},
					"response": []
				},
				{
					"name": "Past Due",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/employee/past-due-requirements",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"employee",
								"past-due-requirements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Requirement History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/employee/requirements/1269/history?",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"employee",
								"requirements",
								"1269",
								"history"
							],
							"query": [
								{
									"key": "employee_id",
									"value": "11888",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Aware",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/employee/requirements/135/aware",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"employee",
								"requirements",
								"135",
								"aware"
							]
						},
						"description": "Route Params:\nRequirement id"
					},
					"response": []
				},
				{
					"name": "Upload",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "attachment",
									"value": "",
									"type": "file"
								},
								{
									"key": "expiry-date",
									"value": "2019-12-12",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/employee/requirements/3/upload-date",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"employee",
								"requirements",
								"3",
								"upload-date"
							]
						},
						"description": "Route Params:\nRequirement ID"
					},
					"response": []
				},
				{
					"name": "Request Exclusion",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "requirement_id",
									"value": "4",
									"type": "text"
								},
								{
									"key": "note",
									"value": "Please allow me to not complete this request",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/employee/requirements/request-exclusion",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"employee",
								"requirements",
								"request-exclusion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Test",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/employee/requirements/1251/test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"employee",
								"requirements",
								"1251",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit Test",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "answers[1]",
									"value": "Answer",
									"type": "text"
								},
								{
									"key": "answers[2]",
									"value": "Answer",
									"type": "text"
								},
								{
									"key": "answers[3]",
									"value": "Answers",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/employee/requirements/1251/test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"employee",
								"requirements",
								"1251",
								"test"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Contractor",
			"item": [
				{
					"name": "Dashboard",
					"item": [
						{
							"name": "Overall compliance",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/dashboard/overall-compliance",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"dashboard",
										"overall-compliance"
									]
								},
								"description": "This route as  well as:\nCompany Compliance, Company Positions  Compliance, Past  Due, Requirement History, Upload (in this directory)\nCan take an employee_id as a query parameter to act as an employee, if the curret user is an  admin/owner for the same contracting organization."
							},
							"response": [
								{
									"name": "{{base_url}}/api/employee/overall-compliance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/api/employee/overall-compliance",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"employee",
												"overall-compliance"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx/1.15.5"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Date",
											"value": "Mon, 21 Jan 2019 21:33:39 GMT"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "60"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "59"
										}
									],
									"cookie": [],
									"body": "{\n    \"requirement_count\": 10,\n    \"requirement_completed_count\": 4,\n    \"requirement_past_due_count\": 6,\n    \"compliance\": 0\n}"
								}
							]
						},
						{
							"name": "Company Compliance",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/dashboard/company-compliance",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"dashboard",
										"company-compliance"
									]
								}
							},
							"response": []
						},
						{
							"name": "Company Positions Requirements",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/dashboard/company-compliance/44/requirements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"dashboard",
										"company-compliance",
										"44",
										"requirements"
									]
								},
								"description": "Route params:\nhiring_organization id"
							},
							"response": []
						},
						{
							"name": "Past Due",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/dashboard/past-due-requirements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"dashboard",
										"past-due-requirements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Requirement History",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/dashboard/requirements/1027/history?",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"dashboard",
										"requirements",
										"1027",
										"history"
									],
									"query": [
										{
											"key": "employee_id",
											"value": "11888",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Aware",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "",
											"value": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/dashboard/requirements/1696/aware",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"dashboard",
										"requirements",
										"1696",
										"aware"
									]
								},
								"description": "Route Params:\nRequirement id"
							},
							"response": []
						},
						{
							"name": "Upload",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "attachment",
											"value": "",
											"type": "file"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/dashboard/requirements/6/upload",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"dashboard",
										"requirements",
										"6",
										"upload"
									]
								},
								"description": "Route Params:\nRequirement ID"
							},
							"response": []
						},
						{
							"name": "Upload With Date",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "attachment",
											"value": "",
											"type": "file"
										},
										{
											"key": "expiry-date",
											"value": "2024-12-09 ",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/dashboard/requirements/6/upload-date",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"dashboard",
										"requirements",
										"6",
										"upload-date"
									]
								},
								"description": "Route Params:\nRequirement ID"
							},
							"response": []
						},
						{
							"name": "Request Exclusion",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "requirement_id",
											"value": "4",
											"type": "text"
										},
										{
											"key": "note",
											"value": "Please allow me to not complete this request",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/dashboard/requirements/request-exclusion",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"dashboard",
										"requirements",
										"request-exclusion"
									]
								}
							},
							"response": []
						},
						{
							"name": "Overall Employee Compliance",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/dashboard/overall-employee-compliance",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"dashboard",
										"overall-employee-compliance"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Contractor Employee Management",
					"item": [
						{
							"name": "Get Employees",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/employee?",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"employee"
									],
									"query": [
										{
											"key": "hiring_organization_id",
											"value": "44",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Employee",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "Shane",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Lessard",
											"type": "text"
										},
										{
											"key": "email",
											"value": "shane1@example.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "password_confirmation",
											"value": "password",
											"type": "text"
										},
										{
											"key": "position_id",
											"value": "14",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/employee",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"employee"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Employee Positions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/employee/4/positions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"employee",
										"4",
										"positions"
									]
								},
								"description": "Route Parameters\nuser_id"
							},
							"response": []
						},
						{
							"name": "Assign Employee Position",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "position_id",
											"value": "18",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/employee/4/positions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"employee",
										"4",
										"positions"
									]
								},
								"description": "Route parameters:\nuser id"
							},
							"response": []
						},
						{
							"name": "Update Employee",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "Shaney",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Lessardo",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "password_confirmation",
											"value": "password",
											"type": "text"
										},
										{
											"key": "_method",
											"value": "PATCH",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/employee/1571",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"employee",
										"1571"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unassign employee position (DELETE)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "position_id",
											"value": "13",
											"type": "text"
										},
										{
											"key": "_method",
											"value": "DELETE",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/employee/4/positions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"employee",
										"4",
										"positions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Employee",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/employee/112",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"employee",
										"112"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Contractor Admin Management",
					"item": [
						{
							"name": "Get Contractor Admins",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/admin",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"admin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Admin",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "Shane",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Lessard",
											"type": "text"
										},
										{
											"key": "email",
											"value": "shane@example.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "password_confirmation",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/admin",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"admin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Admin User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "first_name",
											"value": "Shane",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Lessard",
											"type": "text"
										},
										{
											"key": "email",
											"value": "shane@example.com",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "password_confirmation",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/admin/11892",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"admin",
										"11892"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Admin user Role",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/admin/11892",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"admin",
										"11892"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Hiring Organizations",
					"item": [
						{
							"name": "Get associated organizations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/organization",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"organization"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Invitations from Hiring Organizations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/organization/invited",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"organization",
										"invited"
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept invitation",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "hiring_organization_id",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/organization/accept",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"organization",
										"accept"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for unassociated hiring organizations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/contractor/organization/search?search=olson",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"organization",
										"search"
									],
									"query": [
										{
											"key": "search",
											"value": "olson"
										}
									]
								},
								"description": "Searches unassociated hiring organizations, available to contractor admins only."
							},
							"response": []
						},
						{
							"name": "Describe invitation",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "invite_code",
											"value": "tZKA4qhB4ONF2LKXHQVtSFYJyaUD4rpXvbVKugq0ZLYiyBZKRGkwCtOEZM43kNU3",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/invitation/describe",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"invitation",
										"describe"
									]
								},
								"description": "This will find if an invitation exists, and if so will describe the user a nd contractor created."
							},
							"response": []
						},
						{
							"name": "Accept invitation and Create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "invite_code",
											"value": "0Bw5GuQ3T9pP8KASwl3O4SiEGUDg6M98qiqb5jKFZGrMW5Sx6QEAYeg5WzP3ISN4",
											"type": "text"
										},
										{
											"key": "email",
											"value": "shanelessard@example.cac",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "password_confirmation",
											"value": "password",
											"type": "text"
										},
										{
											"key": "name",
											"value": "Almost the right company namecsasf",
											"type": "text"
										},
										{
											"key": "address",
											"value": "1250 street street",
											"type": "text"
										},
										{
											"key": "state",
											"value": "ontario",
											"type": "text"
										},
										{
											"key": "country",
											"value": "canada",
											"type": "text"
										},
										{
											"key": "post_code",
											"value": "n0r1z0",
											"type": "text"
										},
										{
											"key": "stripe_token",
											"value": "tok_1EbCB6FLLhNQSmQK8174EyJ3",
											"type": "text"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/invitation/accept-and-create",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"invitation",
										"accept-and-create"
									]
								},
								"description": "Invitation code is used to 'create' a contractor on top of the information provided by hiring organization"
							},
							"response": []
						},
						{
							"name": "Add new hiring organization",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/organization/7",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"organization",
										"7"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove a hiring Organization",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/contractor/organization/2",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"contractor",
										"organization",
										"2"
									]
								},
								"description": "Disassociate a hiring organization from the user's contracting organization"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Companies",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/contractor/companies",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Positions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/contractor/positions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"positions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Positions By Hiring Organization",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/contractor/positions/hiring-organization/16",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"positions",
								"hiring-organization",
								"16"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contractor Positions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/contractor/contractor-positions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"contractor-positions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Contractor Positions By Hiring Organization",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/contractor/contractor-positions/hiring-organization/16",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"contractor-positions",
								"hiring-organization",
								"16"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contractor Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/contractor",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor"
							]
						},
						"description": "Request data for own contractor company"
					},
					"response": []
				},
				{
					"name": "Update Contractor Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "ABC Contracting",
									"type": "text"
								},
								{
									"key": "state",
									"value": "Ontario",
									"type": "text"
								},
								{
									"key": "country",
									"value": "Canada",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Windsor",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/contractor/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"update"
							]
						},
						"description": "Request data for own contractor company"
					},
					"response": []
				},
				{
					"name": "Update Logo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "logo",
									"value": "",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/contractor/logo",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"logo"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Hiring Organizations",
			"item": [
				{
					"name": "admins",
					"item": [
						{
							"name": "Facilities",
							"item": [
								{
									"name": "Get Admin Facilities",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/api/organization/admin/107/facility",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"organization",
												"admin",
												"107",
												"facility"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Admin Facilities",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "facility_ids[]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "facility_ids[]",
													"value": "3",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/api/organization/admin/107/facility/add",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"organization",
												"admin",
												"107",
												"facility",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Admin Facilities",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "facility_ids[]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "facility_ids[]",
													"value": "3",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/api/organization/admin/107/facility/remove",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"organization",
												"admin",
												"107",
												"facility",
												"remove"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Departments",
							"item": [
								{
									"name": "Get Admin Departments",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/api/organization/admin/107/department",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"organization",
												"admin",
												"107",
												"department"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Admin Departments",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "department_ids[]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "department_ids[]",
													"value": "3",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/api/organization/admin/107/department/add",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"organization",
												"admin",
												"107",
												"department",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Admin Departments",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "department_ids[]",
													"value": "2",
													"type": "text"
												},
												{
													"key": "department_ids[]",
													"value": "3",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{base_url}}/api/organization/admin/107/department/remove",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"organization",
												"admin",
												"107",
												"department",
												"remove"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "See Admins",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/admin",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"admin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Admin",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/admin/106",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"admin",
										"106"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Admin",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "slessard@contractorcompliance.org",
											"type": "text"
										},
										{
											"key": "first_name",
											"value": "Shane",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Lessard",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "password_confirmation",
											"value": "password",
											"type": "text"
										},
										{
											"key": "access_level",
											"value": "2",
											"type": "text"
										},
										{
											"key": "department_ids[]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "facility_ids[]",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/admin",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"admin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Admin Update",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "slessard@contractorcompliance.org",
											"type": "text"
										},
										{
											"key": "first_name",
											"value": "Shane",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Lessard",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "password_confirmation",
											"value": "password",
											"type": "text"
										},
										{
											"key": "access_level",
											"value": "3",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/admin/108",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"admin",
										"108"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Admin Role",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/organization/admin/108",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"admin",
										"108"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Departments",
					"item": [
						{
							"name": "Get Departments",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/department",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show Department (and roles, requirements)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/department/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"department",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Department 8",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Department 1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/department",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"department"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Department 4",
											"type": "text"
										},
										{
											"key": "description",
											"value": "another department",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/department/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"department",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "DEPRECATED Add roles",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "role_ids[]",
											"value": "85",
											"type": "text"
										},
										{
											"key": "role_ids[]",
											"value": "86",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/department/1/add-roles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"department",
										"1",
										"add-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "DEPRECATED Remove roles",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "role_ids[]",
											"value": "85",
											"type": "text"
										},
										{
											"key": "role_ids[]",
											"value": "86",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/department/1/remove-roles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"department",
										"1",
										"remove-roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "DEPRECATED Add Requirements",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "requirement_ids[]",
											"value": "3",
											"type": "text"
										},
										{
											"key": "requirement_ids[]",
											"value": "4",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/department/1/add-requirements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"department",
										"1",
										"add-requirements"
									]
								}
							},
							"response": []
						},
						{
							"name": "DEPRECATED Remove Requiirements",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "requirement_ids[]",
											"value": "3",
											"type": "text"
										},
										{
											"key": "requirement_ids[]",
											"value": "4",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/department/1/remove-requirements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"department",
										"1",
										"remove-requirements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Department 6",
											"type": "text"
										},
										{
											"key": "description",
											"value": "another department",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/department/5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"department",
										"5"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Facilities",
					"item": [
						{
							"name": "Get Facilities",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/facility?all=true",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"facility"
									],
									"query": [
										{
											"key": "all",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Facility",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Facility 9",
											"type": "text"
										},
										{
											"key": "description",
											"value": "New Facility",
											"type": "text"
										},
										{
											"key": "notification_email",
											"value": "dev@shanelessard.com",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/facility",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"facility"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Facility",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/facility/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"facility",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Facility",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/organization/facility/4",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"facility",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Facility",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Facility 91",
											"type": "text"
										},
										{
											"key": "description",
											"value": "A new description",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/facility/4",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"facility",
										"4"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Positions ",
					"item": [
						{
							"name": "Get Positions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/position?requirement_count=true&all=true",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"position"
									],
									"query": [
										{
											"key": "type",
											"value": "employee",
											"disabled": true
										},
										{
											"key": "requirement_count",
											"value": "true"
										},
										{
											"key": "all",
											"value": "true"
										}
									]
								},
								"description": "Query Parameter explanation:\n?type=(employee|contractor) - returns the given type, if no type provided, will return all positions. \n?requirement_count=true - if including this parameter, will return count of requirements with the response\n?all=true - this will respond with all positions for hiring organization. When used for managing positions, this should be included. When used for applying positions to contractors, leave this out, and you'll only get the positions you can assign (through facilities)"
							},
							"response": []
						},
						{
							"name": "Get Position",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/position/13?",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"position",
										"13"
									],
									"query": [
										{
											"key": "all",
											"value": "true",
											"disabled": true
										}
									]
								},
								"description": "Query Parameter explanation:\n?type=(employee|contractor) - returns the given type, if no type provided, will return all positions. \n?requirement_count=true - if including this parameter, will return count of requirements with the response\n?all=true - this will respond with all positions for hiring organization. When used for managing positions, this should be included. When used for applying positions to contractors, leave this out, and you'll only get the positions you can assign (through facilities)"
							},
							"response": []
						},
						{
							"name": "Update Position",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Position New OMG",
											"type": "text"
										},
										{
											"key": "is_active",
											"value": "1",
											"type": "text"
										},
										{
											"key": "auto_assign",
											"value": "0",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/position/13",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"position",
										"13"
									]
								}
							},
							"response": []
						},
						{
							"name": "(DEPRECATED - update and change to inactive instead) Delete Position",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/organization/position/13",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"position",
										"13"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Position",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Position Newest",
											"type": "text"
										},
										{
											"key": "is_active",
											"value": "1",
											"type": "text"
										},
										{
											"key": "auto_assign",
											"value": "1",
											"type": "text"
										},
										{
											"key": "position_type",
											"value": "contractor",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/position",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"position"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Facilities",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "facility_ids[]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "facility_ids[]",
											"value": "3",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/position/13/add-facilities",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"position",
										"13",
										"add-facilities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Requirements",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "requirement_ids[]",
											"value": "4",
											"type": "text"
										},
										{
											"key": "requirement_ids[]",
											"value": "7",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/position/13/add-requirements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"position",
										"13",
										"add-requirements"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Facilities",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "facility_ids[]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "facility_ids[]",
											"value": "3",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/position/13/remove-facilities",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"position",
										"13",
										"remove-facilities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Requirements",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "requirement_ids[]",
											"value": "4",
											"type": "text"
										},
										{
											"key": "requirement_ids[]",
											"value": "7",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/position/13/remove-requirements",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"position",
										"13",
										"remove-requirements"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Requirements",
					"item": [
						{
							"name": "View Requirements",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/requirement",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"requirement"
									]
								}
							},
							"response": []
						},
						{
							"name": "View Requirement",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/requirement/3",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"requirement",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Requirement",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Requirement from postsss",
											"type": "text"
										},
										{
											"key": "type",
											"value": "upload",
											"type": "text"
										},
										{
											"key": "warning_period",
											"value": "25",
											"type": "text"
										},
										{
											"key": "renewal_period",
											"value": "3",
											"type": "text"
										},
										{
											"key": "content_url",
											"value": "https://example.com",
											"type": "text"
										},
										{
											"key": "content_file",
											"value": "",
											"type": "file"
										},
										{
											"key": "content",
											"value": "This is a requirement all about how my life got flipped turned upside down",
											"type": "text"
										},
										{
											"key": "count_if_not_approved",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/requirement",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"requirement"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Requirement",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "New Name",
											"type": "text"
										},
										{
											"key": "type",
											"value": "upload",
											"type": "text"
										},
										{
											"key": "warning_period",
											"value": "25",
											"type": "text",
											"disabled": true
										},
										{
											"key": "renewal_period",
											"value": "3",
											"type": "text",
											"disabled": true
										},
										{
											"key": "content_url",
											"value": "https://example.com",
											"type": "text"
										},
										{
											"key": "content_file",
											"value": "",
											"type": "file"
										},
										{
											"key": "content",
											"value": "This is a requirement all about how my life got flipped turned upside down",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/requirement/18",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"requirement",
										"18"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Requirement",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/organization/requirement/18",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"requirement",
										"18"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Departments",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "department_ids[]",
											"value": "3",
											"type": "text"
										},
										{
											"key": "department_ids[]",
											"value": "4",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/requirement/3/add-departments",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"requirement",
										"3",
										"add-departments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Departments",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "department_ids[]",
											"value": "3",
											"type": "text"
										},
										{
											"key": "department_ids[]",
											"value": "4",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/requirement/3/remove-departments",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"requirement",
										"3",
										"remove-departments"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Rating",
					"item": [
						{
							"name": "View Ratings by Contractor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/ratings/3",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"ratings",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Star Rating",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "rating",
											"value": "4.9",
											"type": "text"
										},
										{
											"key": "comments",
											"value": "Comment 1",
											"type": "text"
										},
										{
											"key": "hiring_organization_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "role_id",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/ratings/3",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"ratings",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Form Rating",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"form\": {\n    \"submission\": {\n      \"data\": [\n        {\n          \"dynamic_form_column_label\": \"Fill in the form\",\n          \"value\": \"\"\n        },\n        {\n          \"dynamic_form_column_label\": \"Rating\",\n          \"value\": \"56\"\n        }\n      ]\n    }\n  },\n  \"contractor_id\": 3,\n  \"comments\": \"\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/ratings/3",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"ratings",
										"3"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tests",
					"item": [
						{
							"name": "Show Tests",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/test",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Show Test",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/test/5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"test",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Test",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "sample tests",
											"type": "text"
										},
										{
											"key": "max_tries",
											"value": "19",
											"type": "text"
										},
										{
											"key": "min_passing_criteria",
											"value": "85",
											"type": "text"
										},
										{
											"key": "html",
											"value": "<b>This is the first test</b><p>This is in a paragraph</p><script>alert('js')</script>",
											"type": "text"
										},
										{
											"key": "questions[0][question_text]",
											"value": "What is the question?",
											"type": "text"
										},
										{
											"key": "questions[0][reference]",
											"value": "https://example.com",
											"type": "text"
										},
										{
											"key": "questions[0][option_1]",
											"value": "Answer 1",
											"type": "text"
										},
										{
											"key": "questions[0][option_2]",
											"value": "Answer 2",
											"type": "text"
										},
										{
											"key": "questions[0][option_3]",
											"value": "Answer 3",
											"type": "text"
										},
										{
											"key": "questions[0][correct_answer]",
											"value": "Answer 1",
											"type": "text"
										},
										{
											"key": "questions[1][question_text]",
											"value": "Another Question? Really?",
											"type": "text"
										},
										{
											"key": "questions[1][reference]",
											"value": "https://example.ca",
											"type": "text"
										},
										{
											"key": "questions[1][option_1]",
											"value": "First Answer",
											"type": "text"
										},
										{
											"key": "questions[1][option_2]",
											"value": "Another Answer the second",
											"type": "text"
										},
										{
											"key": "questions[1][correct_answer]",
											"value": "First Answer",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/test",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Test",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "asdf",
											"type": "text"
										},
										{
											"key": "html",
											"value": "<what>what</what>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/test/5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"test",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Test",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/organization/test/5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"test",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Test Question",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "question_text",
											"value": "<p>It's a question of html</p><strong>Right</strong>",
											"type": "text"
										},
										{
											"key": "reference",
											"value": "https://example.ca",
											"type": "text"
										},
										{
											"key": "option_1",
											"value": "It's the first option",
											"type": "text"
										},
										{
											"key": "option_2",
											"value": "It's the second option",
											"type": "text"
										},
										{
											"key": "option_3 ",
											"value": "it's the third option",
											"type": "text"
										},
										{
											"key": "correct_answer",
											"value": "It's the first option",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/test/5/question",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"test",
										"5",
										"question"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Question",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "option_1",
											"value": "option renamed",
											"type": "text"
										},
										{
											"key": "correct_answer",
											"value": "option renamed",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/test/6/question/5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"test",
										"6",
										"question",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Test Question",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/organization/test/6/question/5",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"test",
										"6",
										"question",
										"5"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Contractors",
					"item": [
						{
							"name": "List active contractors",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/contractor",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor"
									]
								},
								"description": "See list of contractors associated to current user's hiring organization"
							},
							"response": []
						},
						{
							"name": "Show Contractor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/contractor/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor",
										"1"
									]
								},
								"description": "Show contractor with lists of positions and facilities"
							},
							"response": []
						},
						{
							"name": "Search unassociated contractors",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/contractor/search?search=veum",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor",
										"search"
									],
									"query": [
										{
											"key": "search",
											"value": "veum"
										}
									]
								},
								"description": "Returns all Contractors that are not currently associated with the logged in user's hiring organization. If a query parameter \"search\" is included, will filter by results where the Contractor's name or the Contractor's owners' email address match or include the provided term."
							},
							"response": []
						},
						{
							"name": "Invite Existing Contractor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "facility_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "position_id",
											"value": "14",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/contractor/invite/14",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor",
										"invite",
										"14"
									]
								},
								"description": "use the route to add a contractor to the hiring organization's list of associated contractors. This will only be used for existing contractors in the system."
							},
							"response": []
						},
						{
							"name": "Invite new contractor",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "position_id",
											"value": "14",
											"type": "text"
										},
										{
											"key": "facility_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "email",
											"value": "shawn@example.com",
											"type": "text"
										},
										{
											"key": "name",
											"value": "ShawnCo",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/contractor/invite",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor",
										"invite"
									]
								},
								"description": "Use this route to invite a constractor who is not yet in the system."
							},
							"response": []
						},
						{
							"name": "Add Facilities",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "facility_ids[]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "facility_ids[]",
											"value": "4",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/contractor/14/add-facilities",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor",
										"14",
										"add-facilities"
									]
								},
								"description": "Assign facilities to contractors."
							},
							"response": []
						},
						{
							"name": "Add Positions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "position_ids[]",
											"value": "14",
											"type": "text"
										},
										{
											"key": "position_ids[]",
											"value": "15",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/contractor/14/add-positions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor",
										"14",
										"add-positions"
									]
								},
								"description": "Assign facilities to contractors."
							},
							"response": []
						},
						{
							"name": "Remove Facilities",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "facility_ids[]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "facility_ids[]",
											"value": "4",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/contractor/14/remove-facilities",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor",
										"14",
										"remove-facilities"
									]
								},
								"description": "Assign facilities to contractors."
							},
							"response": []
						},
						{
							"name": "Remove Positions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "position_ids[]",
											"value": "14",
											"type": "text"
										},
										{
											"key": "position_ids[]",
											"value": "15",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/organization/contractor/14/remove-positions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor",
										"14",
										"remove-positions"
									]
								},
								"description": "Assign facilities to contractors."
							},
							"response": []
						},
						{
							"name": "Assignable Positions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/contractor/14/assignable-positions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor",
										"14",
										"assignable-positions"
									]
								},
								"description": "Returns positions that the admin can assign to the admin\n\nIf owner, all positions for facilities the admin is assigned to. For admins, all positions for facilities that have been assigned to both the admin and the contractor."
							},
							"response": []
						},
						{
							"name": "Mutually Assigned Facilities",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/organization/contractor/14/mutually-assigned-facilities",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"organization",
										"contractor",
										"14",
										"mutually-assigned-facilities"
									]
								},
								"description": "Returns all facilities assigned to contractor (and if hiring organization admin, both admin and contractor)"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Dashboard",
					"item": [],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Company Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/organization",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"organization"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Company Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "phone",
									"value": "226 350 4242",
									"type": "text"
								},
								{
									"key": "city",
									"value": "windsor",
									"type": "text"
								},
								{
									"key": "postal_code",
									"value": "n8r 1z3",
									"type": "text"
								},
								{
									"key": "state",
									"value": "ontario",
									"type": "text"
								},
								{
									"key": "country",
									"value": "Canada",
									"type": "text"
								},
								{
									"key": "website",
									"value": "https://example.com",
									"type": "text"
								},
								{
									"key": "address",
									"value": "210 Provincial Road",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/organization/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"organization",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Logo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "logo",
									"value": "",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/organization/logo",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"organization",
								"logo"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"protocolProfileBehavior": {}
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "Contractor",
					"item": [
						{
							"name": "Test Report",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/reports/contractor/test?downloa",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"reports",
										"contractor",
										"test"
									],
									"query": [
										{
											"key": "downloa",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "WorkTypes",
			"item": [
				{
					"name": "Get Work Types (root)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/work-types/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"work-types",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contractors by Work Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d16ee227-1596-4a21-8a2e-1924c0fe20fd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has the `code` prop\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.not.be.null;",
									"});",
									"",
									"pm.test(\"Response has the `contractors` prop\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contractors).to.not.be.null;",
									"});",
									"",
									"pm.test(\"Response has the `codes` prop\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.codes).to.not.be.null;",
									"});",
									"",
									"pm.test(\"codes as at least the root element\", function () {",
									"    var jsonData = pm.response.json();",
									"    var parentCodeElement = jsonData.codes.find(function (code){",
									"        return code.code == jsonData.code;",
									"    });",
									"    var found = !!parentCodeElement;",
									"    pm.expect(found).to.be.eql(true);",
									"    pm.expect(parentCodeElement.code + \"\").to.eql(jsonData.code + \"\")",
									"});",
									"",
									"pm.test(",
									"    \"functionality is not incomplete\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.message).to.not.eql('incomplete');",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/work-types/contractors/99",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"work-types",
								"contractors",
								"99"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contractors by Work Type - 1 Contractor : 1 Work Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d16ee227-1596-4a21-8a2e-1924c0fe20fd",
								"exec": [
									"",
									"pm.test(\"Response has 1 contractor\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contractors.length).to.be.eql(1);",
									"});",
									"",
									"",
									"pm.test(\"Response has 1 work type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.codes.length).to.be.eql(1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/work-types/contractors/991",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"work-types",
								"contractors",
								"991"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contractors by Work Type - 2 Contractors : 1 Work Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d16ee227-1596-4a21-8a2e-1924c0fe20fd",
								"exec": [
									"pm.test(\"Response has 2 contractors\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contractors.length).to.be.eql(2);",
									"});",
									"",
									"",
									"pm.test(\"Response has 1 work type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.codes.length).to.be.eql(1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/work-types/contractors/994",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"work-types",
								"contractors",
								"994"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Work Types",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/work-types?search=elec",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"work-types"
							],
							"query": [
								{
									"key": "search",
									"value": "elec"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Work Types (children)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/work-types/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"work-types",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Company Work Types",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/work-types/list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"work-types",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Work Type",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "work_type_id",
									"value": "18",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/work-types",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"work-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Work Type Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "work_type_id",
									"value": "4",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/work-types/18",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"work-types",
								"18"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "Get Notifications",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/notifications",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notifications"
							]
						},
						"description": "Get all notifications"
					},
					"response": []
				},
				{
					"name": "Get Unread notifications",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/notifications/new",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notifications",
								"new"
							]
						},
						"description": "Get all notifications"
					},
					"response": []
				},
				{
					"name": "Get one notification, mark as read",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/notifications/5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notifications",
								"5"
							]
						},
						"description": "Get all notifications"
					},
					"response": []
				},
				{
					"name": "Mark all notifications as read",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/notifications/dismiss",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notifications",
								"dismiss"
							]
						},
						"description": "Get all notifications"
					},
					"response": []
				},
				{
					"name": "Send a notification",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_id",
									"value": "1571",
									"type": "text"
								},
								{
									"key": "message",
									"value": "this is a test message",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/notifications/send",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notifications",
								"send"
							]
						},
						"description": "Senda  notification toa  user"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Location",
			"item": [
				{
					"name": "Get Countries",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/location/countries",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"location",
								"countries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Country (by id)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/location/countries/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"location",
								"countries",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get States",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/location/state",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"location",
								"state"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get States (With Country Id)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/location/state/3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"location",
								"state",
								"3"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Subscription",
			"item": [
				{
					"name": "See Subscription",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/contractor/subscription",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"subscription"
							]
						}
					},
					"response": []
				},
				{
					"name": "See invoices",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/contractor/subscription/invoice",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"subscription",
								"invoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Coupon Code",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "coupon",
									"value": "test-coupon",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/contractor/subscription/coupon/describe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"subscription",
								"coupon",
								"describe"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply Coupon Code",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "coupon",
									"value": "test-coupon",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/contractor/subscription/coupon/apply",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"subscription",
								"coupon",
								"apply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify Credit Card",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "stripe_token",
									"value": "tok_1ETVeYFLLhNQSmQKXIiFCtWq",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/contractor/subscription/card",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"subscription",
								"card"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify Subscription Plan",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "plan",
									"value": "large",
									"description": "small, medium or large",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/contractor/subscription/plan",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"subscription",
								"plan"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Subscription",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "stripe_token",
									"value": "tok_1ETYTZFLLhNQSmQKNIRmA10M",
									"type": "text"
								},
								{
									"key": "plan",
									"value": "medium",
									"type": "text"
								},
								{
									"key": "coupon_code",
									"value": "test-coupon",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/contractor/subscription",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"subscription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Subscription",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/contractor/subscription",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contractor",
								"subscription"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"protocolProfileBehavior": {}
		},
		{
			"name": "Contactable",
			"item": [
				{
					"name": "Contactable Companies",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/contactable/company",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contactable",
								"company"
							]
						}
					},
					"response": []
				},
				{
					"name": "Contactable Companies CContactable Users (by company)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/contactable/user?company_type=hiring_organization&company_id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"contactable",
								"user"
							],
							"query": [
								{
									"key": "company_type",
									"value": "hiring_organization"
								},
								{
									"key": "company_id",
									"value": "1"
								}
							]
						},
						"description": "Query parameters company_type (hiring_organization or contractor) and company_id are accepted. If either is missing, the route will return the user's OWN company users."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dynamic Forms",
			"item": [
				{
					"name": "Dynamic Form: Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "443f2ccc-6f46-4ab1-8277-76e2b7a65da5",
								"exec": [
									"",
									"postman.setEnvironmentVariable(\"form_id\", JSON.parse(responseBody).form.id);",
									"",
									"pm.globals.set(\"form_id\", 1);",
									"",
									"pm.test(",
									"    \"Status code is 200\",",
									"    function () {",
									"        pm.response.to.have.status(200);",
									"    ",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"functionality is not incomplete\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.message).to.not.eql('incomplete');",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"Form ID from form, matches form id in columns\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        ",
									"        // Checking and getting form_id",
									"        pm.expect(jsonData.form.id).to.not.eql(null);",
									"        ",
									"        var form_id = jsonData.form.id;",
									"        ",
									"        // Checking column form id",
									"        pm.expect(jsonData.form.columns[0].dynamic_form_id).to.eql(form_id);",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"Changes have been applied to the columns\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.form.columns[0].label).to.eql(\"Postman Test Column 0\");",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"Changes have been applied to the actions\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.form.actions[0].dynamic_form_column_label).to.eql(\"Postman Test Column 0\");",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"form\": {\n\t\t\"title\": \"Postman Form\",\n\t\t\"description\": \"This was created through Postman\",\n        \"create_user_id\": 1\n\t},\n    \"columns\": [\n        {\n            \"label\": \"Postman Test Column 0\",\n            \"description\": \"column from postman\",\n            \"type\": \"transformation\",\n            \"transformation\": \"{\\\"==\\\": [\\\"apples\\\", \\\"{{Postman Test Column 1}}\\\"]}\"\n        },\n        {\n            \"label\": \"Postman Test Column 1\",\n            \"description\": \"column from postman\",\n            \"type\": \"text\"\n        },\n        {\n            \"label\": \"Postman Test Column 2\",\n            \"description\": \"column from postman\",\n            \"type\": \"numeric\"\n        },\n        {\n            \"label\": \"Postman Test Column 3\",\n            \"description\": \"column from postman\",\n            \"type\": \"checkbox\"\n        }\n    ],\n    \"actions\": [\n    \t{\n    \t\t\"dynamic_form_column_label\": \"Postman Test Column 0\",\n    \t\t\"action\": \"accept\"\n    \t}\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/forms/form/create",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forms",
								"form",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dynamic Form: Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "365a289d-b3a1-4802-82e3-9d487e0c741e",
								"exec": [
									"",
									"postman.setEnvironmentVariable(\"column_id\", JSON.parse(responseBody).form.columns[0].id);",
									"postman.setEnvironmentVariable(\"action_id\", JSON.parse(responseBody).form.actions[0].id);",
									"",
									"let formResponseBody = JSON.parse(responseBody).form;",
									"// postman.setEnvironmentVariable(\"form_json\", encodeURIComponent(JSON.stringify(formResponseBody)));",
									"",
									"pm.test(",
									"    \"Status code is 200\",",
									"    function () {",
									"        pm.response.to.have.status(200);",
									"    ",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"functionality is not incomplete\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.message).to.not.eql('incomplete');",
									"    }",
									");",
									"",
									"pm.test(\"form object to be present\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.form).to.not.be.eql(null)",
									"});",
									"",
									"pm.test(\"columns object to be present\", function () {",
									"    // Making sure response is json",
									"    pm.response.to.be.json;",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Checking length of columns to be greater than 0",
									"    pm.expect(jsonData.form.columns.length).to.not.eql(null);",
									"    pm.expect(jsonData.form.columns.length).to.not.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/forms/form/read/{{form_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forms",
								"form",
								"read",
								"{{form_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dynamic Form: Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "443f2ccc-6f46-4ab1-8277-76e2b7a65da5",
								"exec": [
									"let formResponseBody = JSON.parse(responseBody).form;",
									"postman.setEnvironmentVariable(\"form_json\", encodeURIComponent(JSON.stringify(formResponseBody)));",
									"",
									"pm.test(",
									"    \"Status code is 200\",",
									"    function () {",
									"        pm.response.to.have.status(200);",
									"    ",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"functionality is not incomplete\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.message).to.not.eql('incomplete');",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"Form IDs match from the form and columns\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        ",
									"        // Checking and getting form_id",
									"        pm.expect(jsonData.form.id).to.not.eql(null);",
									"        var form_id = jsonData.form.id;",
									"        ",
									"        // Checking form form id",
									"        pm.expect(jsonData.form.id).to.eql(form_id);",
									"        ",
									"        // Checking column form id",
									"        pm.expect(jsonData.form.columns[0].dynamic_form_id).to.eql(form_id);",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"Changes have been applied to the form\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.form.title).to.eql(\"Postman Updated Form\");",
									"    }",
									")",
									"",
									"pm.test(",
									"    \"Changes have been applied to the columns\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.form.columns[0].label).to.eql(\"Postman Updated Test Column 0\");",
									"    }",
									")",
									"",
									"pm.test(",
									"    \"Changes have been applied to the actions\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.form.actions[0].dynamic_form_column_label).to.eql(\"Postman Updated Test Column 0\");",
									"    }",
									")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"form\": {\n\t\t\"id\": {{form_id}},\n\t\t\"title\": \"Postman Updated Form\",\n\t\t\"description\": \"This was updated through Postman\"\n\t},\n\t\"columns\": [\n\t\t{\n\t\t\t\"dynamic_form_id\": {{form_id}},\n\t\t\t\"label\": \"Postman Updated Test Column 0\",\n\t\t\t\"description\": \"Quaerat quae quia et ab maiores sit. Aliquid voluptas eum quis. Officia excepturi harum voluptates qui ut eum. Et aliquid ratione animi sunt.\",\n\t\t\t\"type\": \"checkbox\",\n\t\t\t\"transformation\": \"{\\\"==\\\": [\\\"apples\\\", \\\"{{Postman Test Column 1}}\\\"]}\"\n\t\t}\n\t],\n\t\"actions\": [\n\t\t{\n\t\t\t\"dynamic_form_id\": {{form_id}},\n\t\t\t\"dynamic_form_column_label\": \"Postman Updated Test Column 0\",\n\t\t\t\"value\": null,\n\t\t\t\"action\": \"accept\"\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/forms/form/update/{{form_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forms",
								"form",
								"update",
								"{{form_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submissions: Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da4d6b9a-045f-492b-86a1-5a3f3cba0dd4",
								"exec": [
									"",
									"pm.test(",
									"    \"Status code is 200\",",
									"    function () {",
									"        pm.response.to.have.status(200);",
									"    ",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"functionality is not incomplete\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.message).to.not.eql('incomplete');",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"submission\": {\n\t\t\"dynamic_form_model\": \"{\\\"form\\\":{\\\"id\\\":9,\\\"title\\\":\\\"Postman Form\\\",\\\"description\\\":\\\"This was created through Postman\\\",\\\"create_user_id\\\":1,\\\"modify_user_id\\\":null,\\\"created_at\\\":\\\"2019-06-06 19:46:44\\\",\\\"updated_at\\\":\\\"2019-06-06 19:46:44\\\",\\\"columns\\\":[{\\\"id\\\":33,\\\"dynamic_form_id\\\":9,\\\"label\\\":\\\"Postman Test Column 0\\\",\\\"description\\\":\\\"column from postman\\\",\\\"type\\\":\\\"transformation\\\",\\\"transformation\\\":\\\"{\\\\\\\"==\\\\\\\": [\\\\\\\"apples\\\\\\\", \\\\\\\"{{Postman Test Column 1}}\\\\\\\"]}\\\"},{\\\"id\\\":34,\\\"dynamic_form_id\\\":9,\\\"label\\\":\\\"Postman Test Column 1\\\",\\\"description\\\":\\\"column from postman\\\",\\\"type\\\":\\\"text\\\",\\\"transformation\\\":null},{\\\"id\\\":35,\\\"dynamic_form_id\\\":9,\\\"label\\\":\\\"Postman Test Column 2\\\",\\\"description\\\":\\\"column from postman\\\",\\\"type\\\":\\\"numeric\\\",\\\"transformation\\\":null},{\\\"id\\\":36,\\\"dynamic_form_id\\\":9,\\\"label\\\":\\\"Postman Test Column 3\\\",\\\"description\\\":\\\"column from postman\\\",\\\"type\\\":\\\"checkbox\\\",\\\"transformation\\\":null}],\\\"actions\\\":[{\\\"id\\\":9,\\\"dynamic_form_id\\\":9,\\\"dynamic_form_column_label\\\":\\\"Postman Test Column 0\\\",\\\"dynamic_form_column_id\\\":33,\\\"value\\\":null,\\\"action\\\":\\\"accept\\\"}]}}\"\n\t},\n\t\"data\": [\n\t\t{\n\t\t\t\"dynamic_form_column_label\": \"Postman Test Column 1\",\n\t\t\t\"value\": \"apples\"\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/forms/submission/create/{{form_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forms",
								"submission",
								"create",
								"{{form_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submissions: Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "443f2ccc-6f46-4ab1-8277-76e2b7a65da5",
								"exec": [
									"pm.test(",
									"    \"Status code is 200\",",
									"    function () {",
									"        pm.response.to.have.status(200);",
									"    ",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"functionality is not incomplete\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.message).to.not.eql('incomplete');",
									"    }",
									");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"submission\": {\n        \"id\": 1,\n        \"data\": [\n            {\n                \"id\": 1,\n                \"dynamic_form_submission_id\": 1,\n                \"dynamic_form_column_label\": \"Davonte Trantow\",\n                \"value\": \"UPDATED SUBMISSION 1\"\n            },\n            {\n                \"id\": 2,\n                \"dynamic_form_submission_id\": 1,\n                \"dynamic_form_column_label\": \"Clint Heathcote\",\n                \"value\": \"UPDATED SUBMISSION 2\"\n            },\n            {\n                \"id\": 3,\n                \"dynamic_form_submission_id\": 1,\n                \"dynamic_form_column_label\": \"Gilda Funk\",\n                \"value\": \"UPDATED SUBMISSION 3\"\n            },\n            {\n                \"id\": 4,\n                \"dynamic_form_submission_id\": 1,\n                \"dynamic_form_column_label\": \"Sally Raynor\",\n                \"value\": \"UPDATED SUBMISSION 4\"\n            }\n        ]\n    },\n    \"data\": [\n        {\n            \"id\": 1,\n            \"dynamic_form_submission_id\": 1,\n            \"dynamic_form_column_label\": \"Davonte Trantow\",\n            \"value\": \"test\"\n        },\n        {\n            \"id\": 2,\n            \"dynamic_form_submission_id\": 1,\n            \"dynamic_form_column_label\": \"Clint Heathcote\",\n            \"value\": \"test\"\n        },\n        {\n            \"id\": 3,\n            \"dynamic_form_submission_id\": 1,\n            \"dynamic_form_column_label\": \"Gilda Funk\",\n            \"value\": \"test\"\n        },\n        {\n            \"id\": 4,\n            \"dynamic_form_submission_id\": 1,\n            \"dynamic_form_column_label\": \"Sally Raynor\",\n            \"value\": \"test\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/forms/submission/update/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forms",
								"submission",
								"update",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submissions: Read",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/forms/submission/read/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forms",
								"submission",
								"read",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submissions: Run Actions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/forms/submission/actions/run/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forms",
								"submission",
								"actions",
								"run",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submissions: Read All",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/forms/form/submissions/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forms",
								"form",
								"submissions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submissions: Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "365a289d-b3a1-4802-82e3-9d487e0c741e",
								"exec": [
									"pm.test(",
									"    \"Status code is 200\",",
									"    function () {",
									"        pm.response.to.have.status(200);",
									"    ",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"functionality is not incomplete\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.message).to.not.eql('incomplete');",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/forms/submission/delete/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forms",
								"submission",
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dynamic Form: Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "365a289d-b3a1-4802-82e3-9d487e0c741e",
								"exec": [
									"pm.test(",
									"    \"Status code is 200\",",
									"    function () {",
									"        pm.response.to.have.status(200);",
									"    ",
									"    }",
									");",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(",
									"    \"functionality is not incomplete\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.message).to.not.eql('incomplete');",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"Form count should be 1\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.forms).to.eql(1);",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"Column count should be greater than 1\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.columns).to.be.above(0);",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"Actions count should be greater than 1\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.actions).to.be.above(0);",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"Submissions count should be greater than 1\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.submissions).to.be.above(0);",
									"    }",
									");",
									"",
									"pm.test(",
									"    \"Data count should be the columns x submissions\",",
									"    function() {",
									"        var jsonData = pm.response.json();",
									"        var columnCount = jsonData.columns;",
									"        var submissionCount = jsonData.submissions;",
									"        ",
									"        pm.expect(jsonData.data).to.be.eql(columnCount * submissionCount);",
									"    }",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/api/forms/form/delete/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"forms",
								"form",
								"delete",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Terms and Conditions",
			"item": [
				{
					"name": "Get T&Cs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/auth/tcs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"tcs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set T&Cs acknowledge",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/auth/tcs/12",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"tcs",
								"12"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Traction Guest",
			"item": [
				{
					"name": "Get Contractor Compliance",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "contractorEmail",
									"value": "james@allsec.ca",
									"type": "text",
									"disabled": true
								},
								{
									"key": "companyEmail",
									"value": "admin@fortisontario.com",
									"type": "text",
									"disabled": true
								},
								{
									"key": "companyId",
									"value": "64",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/company/checkCompliance/?passKey=Hiu$87jFt1845(68JJ58&companyId=23&companyEmail=angela.fehrenriquez@bonduelle.com&contractorEmail=dmachado@contractorcompliance.io",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"company",
								"checkCompliance",
								""
							],
							"query": [
								{
									"key": "contractorEmail",
									"value": "james@allsec.ca",
									"disabled": true
								},
								{
									"key": "companyEmail",
									"value": "chris@allsec.ca",
									"disabled": true
								},
								{
									"key": "companyId",
									"value": "64",
									"disabled": true
								},
								{
									"key": "passKey",
									"value": "Hiu$87jFt1845(68JJ58"
								},
								{
									"key": "companyId",
									"value": "23"
								},
								{
									"key": "companyEmail",
									"value": "angela.fehrenriquez@bonduelle.com"
								},
								{
									"key": "contractorEmail",
									"value": "dmachado@contractorcompliance.io"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Search Hiring Organizations",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/search/hiring-organizations?search=co",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"search",
						"hiring-organizations"
					],
					"query": [
						{
							"key": "search",
							"value": "co"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Contractors",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/search/contractors?search=Manshield",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"search",
						"contractors"
					],
					"query": [
						{
							"key": "search",
							"value": "Manshield"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test Coupon Code",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "51b57836-37f4-4d1a-ac8c-87be2c89abf0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0cef2943-0efa-4a2a-b7cc-1b9a7f722624",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "4721c095-b3fc-4eab-91ba-faf668f63fda",
			"key": "base_url",
			"value": "https://develop.contractorcompliance.ca",
			"type": "string"
		},
		{
			"id": "4d470294-c0b6-4d36-911d-66b9bb559ae4",
			"key": "token",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjI0YTliN2NkZmJmOTgyZTQ2MmIyMmVlMWNiYjE3MjQwMDlkZWE0N2EyMjQ0OGI2OTIzZDNkZmU3Y2E4MWQ4NTQ1OTU1YTRiZmVjYzZmNjcxIn0.eyJhdWQiOiIxIiwianRpIjoiMjRhOWI3Y2RmYmY5ODJlNDYyYjIyZWUxY2JiMTcyNDAwOWRlYTQ3YTIyNDQ4YjY5MjNkM2RmZTdjYTgxZDg1NDU5NTVhNGJmZWNjNmY2NzEiLCJpYXQiOjE1NDc2NjgzNzEsIm5iZiI6MTU0NzY2ODM3MSwiZXhwIjoxNTc5MjA0MzcxLCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.BR7KH1yqM8SvbfVQ0GYowhGskOyOmok8ws_0iViElCuig7eb4VJGdsp9mIHWFg1IpCm6K1oqIrFKrLv7HjM5Okw5Ox0S5m5K4ime3PZ5XI93xsi83ZKSuYUoTeMlaTLFg7_lDCyAP6bdzcBYF_YNjyzFNj5yyOuVQX_DbIntw3DrqEfeXkrM3jjOe4-5tO9hfocE6H0rQOen_T3NARGATt5Y_ImS9nUmLNZddEOACsPK-Wio-fx_uVfGeF2TvzB23rsmmvHM8KXzONJEQjvUd-hzy0o5WqgJmdoFzYLQUarB7iFejtjeknMbWdYvDQA5a-_h2bhAliPdGDNW5mghh51-QHCVkLDNFaoWp-2nEei8wbxZzInljP_GCPWDd7WqqijBFT0ZKXrSWoems5bGXw4rHlUe9tpz94PqCZ4HcPAKSeeaeIhl0X0PjsI09lG-WFDubOGGJhZ0MEAo7HazAahWM24_9xwtHvEARgwDijUNhfvZTIYuZDVk8W_AD3KW6PcbN12qfDpiBVhGwUcFDwnl90YR46cMmahnyKB0Qr7KJs8fN2LPkYsYcvbh2qvXRTBblRK9GUgAP-mv9OK8l7WPF_u88l4lQnQxeofCXntRSmW4RUek-Azz2_ZwBa8CYbfnaI5KHHZZ3q6EHMm_OcG63MOBXUTkln77xdoTz0o",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}